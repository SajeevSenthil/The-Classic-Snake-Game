function Bomb.bomb 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
return
function Bomb.getCoord 1
push argument 0
pop pointer 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
pop local 0
goto IF_END0
label IF_FALSE0
push this 1
pop local 0
label IF_END0
push local 0
return
function Bomb.drawBlock 9
push constant 50
call Rand.randRange 1
pop local 0
push constant 24
call Rand.randRange 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 8
label WHILE_EXP0
push local 2
push argument 1
lt
not
if-goto WHILE_END0
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 5
push local 5
push constant 0
not
call Block.getCoord 2
pop local 3
push local 5
push constant 0
call Block.getCoord 2
pop local 4
push local 3
push local 0
eq
push local 4
push local 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 8
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 8
not
if-goto WHILE_END1
push constant 0
pop local 8
push constant 50
call Rand.randRange 1
pop local 0
push constant 24
call Rand.randRange 1
pop local 1
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push argument 1
lt
not
if-goto WHILE_END2
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 5
push local 5
push constant 0
not
call Block.getCoord 2
pop local 3
push local 5
push constant 0
call Block.getCoord 2
pop local 4
push local 3
push local 0
eq
push local 4
push local 1
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 8
label IF_FALSE1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP1
label WHILE_END1
push local 0
push local 1
call Bomb.bomb 2
pop local 7
push argument 2
push local 7
call BombArray.appendBomb 2
pop temp 0
push local 7
push constant 0
not
call Block.drawFullBlock 2
pop temp 0
push argument 2
return
function Bomb.seeIfLose 12
push constant 0
pop local 0
push argument 3
call BombArray.getBombs 1
pop local 10
push constant 0
pop local 1
push argument 0
push constant 1
sub
pop local 6
push local 6
push argument 1
add
pop pointer 1
push that 0
pop local 9
push local 9
push constant 0
not
call Block.getCoord 2
pop local 2
push local 9
push constant 0
call Block.getCoord 2
pop local 3
push argument 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
add
pop local 2
label IF_FALSE0
push argument 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push constant 1
sub
pop local 2
label IF_FALSE1
push argument 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push constant 1
sub
pop local 3
label IF_FALSE2
push argument 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 3
push constant 1
add
pop local 3
label IF_FALSE3
push constant 0
pop local 4
push argument 3
call BombArray.getSize 1
pop local 5
label WHILE_EXP0
push local 4
push local 5
lt
not
if-goto WHILE_END0
push local 4
push local 10
add
pop pointer 1
push that 0
pop local 11
push local 11
push constant 0
not
call Bomb.getCoord 2
pop local 7
push local 11
push constant 0
call Bomb.getCoord 2
pop local 8
push local 2
push local 7
eq
push local 3
push local 8
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 0
label IF_FALSE4
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 1
label IF_FALSE5
push local 1
return
function Bomb.dispose 0
push argument 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
